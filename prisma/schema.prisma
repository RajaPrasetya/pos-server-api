// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model User {
  id_user   Int      @id @default(autoincrement())
  username  String   @unique @db.VarChar(50)
  password  String   @db.VarChar(255)
  email     String   @unique @db.VarChar(100)
  role      String   @default("user") @db.VarChar(20)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  token     String?  @db.VarChar(255)

  transactions Transaction[]
  @@map("users")
}

model Category {
  id_category Int      @id @default(autoincrement())
  category_name String   @unique @db.VarChar(100)
  
  products Product[]
  @@map("categories")
}

model Product {
  id_product   Int      @id @default(autoincrement())
  product_name String   @db.VarChar(100)
  description  String?  @db.Text
  price        Decimal    @db.Decimal(10, 2)
  stock        Int      @default(0)
  id_category  Int
  image_url    String?  @db.VarChar(255)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  
  detail_transactions Detail_Transaction[]
  category Category @relation(fields: [id_category], references: [id_category])
  @@map("products")
}

model Payment_Method {
  id_payment Int      @id @default(autoincrement())
  payment_method String   @unique @db.VarChar(50)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  transactions Transaction[]
  @@map("payment_methods")
}

model Transaction {
  id_transaction Int      @id @default(autoincrement())
  total_price Decimal @db.Decimal(10, 2)
  status String @default("pending") @db.VarChar(20) 
  id_user Int
  payment_method Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user User @relation(fields: [id_user], references: [id_user])
  paymentMethod Payment_Method @relation(fields: [payment_method], references: [id_payment])

  detail_transactions Detail_Transaction[]
  @@map("transactions")
}

model Detail_Transaction {
  id_detail Int      @id @default(autoincrement())
  id_transaction Int
  id_product Int
  quantity Int @default(1)
  
  transaction Transaction @relation(fields: [id_transaction], references: [id_transaction])
  product Product @relation(fields: [id_product], references: [id_product])

  @@map("detail_transactions")
}
